package com.citi.gfts.erecon.config;

import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;
import org.springframework.stereotype.Component;

@Component
public class ApplicationContextProvider implements ApplicationContextAware {
    private static ApplicationContext context;

    @Override
    public void setApplicationContext(ApplicationContext ctx) {
        context = ctx;
    }

    public static ApplicationContext getApplicationContext() {
        return context;
    }
}



********************************

package com.citi.gfts.erecon.config;

import javax.annotation.PostConstruct;

import org.springframework.context.annotation.Configuration;
import org.springframework.core.env.ConfigurableEnvironment;
import org.springframework.core.env.MutablePropertySources;

@Configuration
public class VaultPropertySourceRegistrar {

    @PostConstruct
    public void registerVaultPropertySource() {
        ConfigurableEnvironment env = 
          (ConfigurableEnvironment) ApplicationContextProvider.getApplicationContext().getEnvironment();

        MutablePropertySources sources = env.getPropertySources();

        // Insert your VaultPropertySource at the front so it takes precedence
        sources.addFirst(new VaultPropertySource("vaultPropertySource", env.getPropertySources().get("applicationConfig: [classpath:/application.properties]")));
    }
}
