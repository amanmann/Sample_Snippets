package com.citi.gfts.erecon.config;

import org.springframework.context.ApplicationListener;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.event.ContextRefreshedEvent;
import org.springframework.core.env.ConfigurableEnvironment;
import org.springframework.core.env.MutablePropertySources;
import org.springframework.core.env.PropertySource;

@Configuration
public class VaultPropertySourceRegistrar implements ApplicationListener<ContextRefreshedEvent> {

    @Override
    public void onApplicationEvent(ContextRefreshedEvent event) {
        ConfigurableEnvironment env = (ConfigurableEnvironment) event.getApplicationContext().getEnvironment();
        MutablePropertySources sources = env.getPropertySources();

        PropertySource<?> delegateSource = null;
        for (PropertySource<?> ps : sources) {
            if (ps.getName().contains("applicationConfig: [classpath:/application.properties]")) {
                delegateSource = ps;
                break;
            }
        }
        if (delegateSource == null) {
            throw new IllegalStateException("applicationConfig: [classpath:/application.properties] property source not found!");
        }

        System.out.println("Delegate property source for VaultPropertySource: " + delegateSource.getName());
        sources.addFirst(new VaultPropertySource("vaultPropertySource", delegateSource));
    }
}
